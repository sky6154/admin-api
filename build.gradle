buildscript {
    ext {
        springBootVersion = '2.1.0.RELEASE'
        queryDslVersion = '4.2.1'
        queryDslPluginVersion = '1.0.9'
    }
    repositories {
        mavenCentral()
        maven{ url "https://plugins.gradle.org/m2/" }
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath "gradle.plugin.com.ewerk.gradle.plugins:querydsl-plugin:${queryDslPluginVersion}"
    }
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'org.springframework.boot'
apply plugin: 'io.spring.dependency-management'
apply plugin: "com.ewerk.gradle.plugins.querydsl"

def queryDslGeneratedDir = 'src/main/generated'

group = 'blog.develobeer'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = 10

repositories {
    mavenCentral()
}

querydsl{
    library = "com.querydsl:querydsl-apt"
    jpa = true
    querydslSourcesDir = queryDslGeneratedDir
}

sourceSets {
    main{
        java{
            srcDirs = ['src/main/java/blog/develobeer/adminApi', queryDslGeneratedDir]
        }
    }
}

bootJar {
    baseName = 'develobeer'
    version =  'latest'
}

dependencies {
    implementation('org.springframework.boot:spring-boot-starter')
    testImplementation('org.springframework.boot:spring-boot-starter-test')

    compileOnly("org.projectlombok:lombok")
    compile("mysql:mysql-connector-java")

    compile('org.springframework.boot:spring-boot-starter-data-jpa')
    compile('org.springframework.boot:spring-boot-starter-web')
    compile('com.google.code.gson:gson:2.8.2')

    compile("org.springframework.boot:spring-boot-starter-security")

    compile("org.springframework.session:spring-session-data-redis")
    compile("io.lettuce:lettuce-core")
    
    compile group: 'commons-codec', name: 'commons-codec', version: '1.5'

    compile("org.springframework.boot:spring-boot-starter-hateoas")

    compile "com.querydsl:querydsl-jpa:${queryDslVersion}"
    compileOnly "com.querydsl:querydsl-apt:${queryDslVersion}"
}

task wrapper(type: Wrapper) {
    gradleVersion = '4.10.2' //we want gradle 4.10.2 to run this project
}


compileQuerydsl{
    options.annotationProcessorPath = configurations.querydsl
}

configurations {
    querydsl.extendsFrom compileClasspath
}